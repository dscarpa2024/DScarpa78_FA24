[
  {
    "objectID": "250_Projects/project0.html",
    "href": "250_Projects/project0.html",
    "title": "Client Report - Introduction",
    "section": "",
    "text": "Introduction\nThe Palmer penguins dataset is about three different species of penguins that live in a colony in the Palmer Archipelago, Antarctica. It contains information about the penguins’ body measurements, like beak length and depth, flipper length, and body mass. It also has information about the sex and age of the penguins.\n\n\nRead and format project data\n# Include and execute your code here\n\n\n\nfrom palmerpenguins import load_penguins\nfrom lets_plot import *\n\nLetsPlot.setup_html(isolated_frame=True)\n\npenguins = load_penguins() #Loading the dataset\npenguins.head() #shows the first 5 rows\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n\n\n\n\n\n\n\nElevator Pitch\n\nThe analysis shows clear differences in BODY MASS and FLIPPER LENGHT among the three penguin species.Gentoo Penguins: They are the largest in body mass. Adelie and Chinstrap Penguins: They have similar sizes.\n\n\nRead and format data\n# Include and execute your code here\n# Include import statements here \n# Include reading data statements here\n\npenguins.info() #Displaying DataFrame info\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 344 entries, 0 to 343\nData columns (total 8 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \n 7   year               344 non-null    int64  \ndtypes: float64(4), int64(1), object(3)\nmemory usage: 21.6+ KB\n\n\n\n\nplot example\n# Include and execute your code here\n\nfig = px.scatter(\n    data_frame=penguins, # Dataset to be used for the plot\n    x=\"flipper_length_mm\", # X-axis: \n    y=\"body_mass_g\", # Y-axis: \n    color=\"species\", # Color points by species\n    symbol=\"species\",  #Use different symbols for each species\n    size_max=10,  \n    opacity=0.7,  #transparency\n    trendline=\"ols\",   #Add a linear trendline (OLS)\n    trendline_scope=\"species\",  # Separate trendline for each species\n    labels={\n        \"flipper_length_mm\": \"Flipper Length (mm)\",\n        \"body_mass_g\": \"Body Mass (g)\",\n        \"species\": \"Species\"\n    },\n    title=\"Body Mass and Flipper Length&lt;br&gt;&lt;sup&gt;Dimensions for Adelie, Chinstrap, and Gentoo Penguins&lt;/sup&gt;\", # Plot title\n    color_discrete_sequence=px.colors.qualitative.Dark2\n)\n\nfig.show() # Display the chart\n\n\n                                                \nProject0 chart\n\n\n\n\nThis graph shows the relationship between flipper length (flipper_length_mm) and body mass (body_mass_g) of three species of penguins: Adelie, Chinstrap, and Gentoo.\n\n\ntable example\n# Include and execute your code here\n\npenguins.head(25) #the first 25 rows of the dataset.\n\n\n\n\n\n\nNot much of a table {#cell-Q1-table}\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n3\nAdelie\nTorgersen\nNaN\nNaN\nNaN\nNaN\nNaN\n2007\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007\n\n\n5\nAdelie\nTorgersen\n39.3\n20.6\n190.0\n3650.0\nmale\n2007\n\n\n6\nAdelie\nTorgersen\n38.9\n17.8\n181.0\n3625.0\nfemale\n2007\n\n\n7\nAdelie\nTorgersen\n39.2\n19.6\n195.0\n4675.0\nmale\n2007\n\n\n8\nAdelie\nTorgersen\n34.1\n18.1\n193.0\n3475.0\nNaN\n2007\n\n\n9\nAdelie\nTorgersen\n42.0\n20.2\n190.0\n4250.0\nNaN\n2007\n\n\n10\nAdelie\nTorgersen\n37.8\n17.1\n186.0\n3300.0\nNaN\n2007\n\n\n11\nAdelie\nTorgersen\n37.8\n17.3\n180.0\n3700.0\nNaN\n2007\n\n\n12\nAdelie\nTorgersen\n41.1\n17.6\n182.0\n3200.0\nfemale\n2007\n\n\n13\nAdelie\nTorgersen\n38.6\n21.2\n191.0\n3800.0\nmale\n2007\n\n\n14\nAdelie\nTorgersen\n34.6\n21.1\n198.0\n4400.0\nmale\n2007\n\n\n15\nAdelie\nTorgersen\n36.6\n17.8\n185.0\n3700.0\nfemale\n2007\n\n\n16\nAdelie\nTorgersen\n38.7\n19.0\n195.0\n3450.0\nfemale\n2007\n\n\n17\nAdelie\nTorgersen\n42.5\n20.7\n197.0\n4500.0\nmale\n2007\n\n\n18\nAdelie\nTorgersen\n34.4\n18.4\n184.0\n3325.0\nfemale\n2007\n\n\n19\nAdelie\nTorgersen\n46.0\n21.5\n194.0\n4200.0\nmale\n2007\n\n\n20\nAdelie\nBiscoe\n37.8\n18.3\n174.0\n3400.0\nfemale\n2007\n\n\n21\nAdelie\nBiscoe\n37.7\n18.7\n180.0\n3600.0\nmale\n2007\n\n\n22\nAdelie\nBiscoe\n35.9\n19.2\n189.0\n3800.0\nfemale\n2007\n\n\n23\nAdelie\nBiscoe\n38.2\n18.1\n185.0\n3950.0\nmale\n2007\n\n\n24\nAdelie\nBiscoe\n38.8\n17.2\n180.0\n3800.0\nmale\n2007\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 0"
    ]
  },
  {
    "objectID": "Templates/DS250_Template.html",
    "href": "Templates/DS250_Template.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "THIS .qmd IS INSTRUCTIONAL AND SHOULD NOT BE USED TO WRITE YOUR REPORTS (EXCEPTION - PROJECT 0). THERE IS ANOTHER TEMPLATE FILE FOR THAT. YOU WILL NEED TO PREVIEW THE REPORT TO PRODUCE A .html FILE. YOU WILL SUBMIT THE .html FILE ON CANVAS."
  },
  {
    "objectID": "Templates/DS250_Template.html#elevator-pitch",
    "href": "Templates/DS250_Template.html#elevator-pitch",
    "title": "Client Report - [Insert Project Title]",
    "section": "Elevator pitch",
    "text": "Elevator pitch\nA SHORT (2-3 SENTENCES) PARAGRAPH THAT DESCRIBES KEY INSIGHTS TAKEN FROM METRICS IN THE PROJECT RESULTS THINK TOP OR MOST IMPORTANT RESULTS. (Note: this is not a summary of the project, but a summary of the results.)\nA Client has requested this analysis and this is your one shot of what you would say to your boss in a 2 min elevator ride before he takes your report and hands it to the client.\n\n\nRead and format project data\n# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html\n\n# Include and execute your code here\n# Note: using the URL is the easiest way for the data to still work in GitHub\n# You may download the file and reference it by name but only if you save it in the same folder as your .qmd file\nurl = 'https://raw.githubusercontent.com/byuidatascience/data4python4ds/master/data-raw/mpg/mpg.csv'\ndf = pd.read_csv(url)\n\n\nHighlight the Questions and Tasks"
  },
  {
    "objectID": "Templates/DS250_Template.html#questiontask-1",
    "href": "Templates/DS250_Template.html#questiontask-1",
    "title": "Client Report - [Insert Project Title]",
    "section": "Question|Task 1",
    "text": "Question|Task 1\nCOPY PASTE QUESTION|TASK 1 FROM THE PROJECT HERE\nAdd details here to answer the question but NOT like an assignment Q&A. You need to write your answers as a consulting solution report. A Client needs to understand the answer, but also needs to understand the decisions that went into the answer (when applicable).\ninclude figures in chunks and discuss your findings in the figure.\n\nYOU SHOULD HAVE QUALITY WRITING THAT DESCRIBES YOUR CHARTS AND TABLES.\nWE HIGHLY RECOMMEND GRAMMARLY TO FIX YOUR SPELLING AND GRAMMAR. WRITING TAKES TIME TO BE CLEAR. SPEND THE TIME TO PRACITCE.\nYOU SHOULD HAVE QUALITY COMMENTS THAT DESCRIBES YOUR CODES. OFTEN CODEERS WORK IN TEAMS AND YOU NEED TO HAVE QUALTIY COMMENTS FOR YOUR TEAM AND YOURSELF. YOU MAY NEED TO REVISIT CODE YOU WROTE OVER A YEAR AGO, AND IF YOU DONT COMMENT IT NOW YOU WONT REMEMBER WHY YOU DID WHAT YOU DID.\n\n\n\nRead and format data\n# Include and execute your code here"
  },
  {
    "objectID": "Templates/DS250_Template.html#questiontask-2",
    "href": "Templates/DS250_Template.html#questiontask-2",
    "title": "Client Report - [Insert Project Title]",
    "section": "Question|Task 2",
    "text": "Question|Task 2\nCOPY PASTE QUESTION|TASK 2 FROM THE PROJECT HERE\n\ninclude figures in chunks and discuss your findings in the figure.\n\n\n\nplot example\n# Include and execute your code here\n\n(\n  ggplot(df.head(500), aes(x='displ', y='hwy')) + geom_point()\n)\n\n\n\n  \n  \n    \n    \n    \n      \n        \n          \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n          \n        \n        \n          \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n          \n        \n      \n      \n        \n          \n            \n              \n                \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                \n              \n            \n          \n        \n        \n          \n            \n            \n          \n        \n      \n      \n        \n          \n            \n            \n            \n              \n                2\n              \n            \n          \n          \n            \n            \n            \n              \n                3\n              \n            \n          \n          \n            \n            \n            \n              \n                4\n              \n            \n          \n          \n            \n            \n            \n              \n                5\n              \n            \n          \n          \n            \n            \n            \n              \n                6\n              \n            \n          \n          \n            \n            \n            \n              \n                7\n              \n            \n          \n          \n          \n        \n        \n          \n            \n              \n                15\n              \n            \n          \n          \n            \n              \n                20\n              \n            \n          \n          \n            \n              \n                25\n              \n            \n          \n          \n            \n              \n                30\n              \n            \n          \n          \n            \n              \n                35\n              \n            \n          \n          \n            \n              \n                40\n              \n            \n          \n          \n            \n              \n                45\n              \n            \n          \n        \n      \n    \n    \n      \n        hwy\n      \n    \n    \n      \n        displ\n      \n    \n    \n    \n  \n  \n  \n\nMy useless chart"
  },
  {
    "objectID": "Templates/DS250_Template.html#questiontask-3",
    "href": "Templates/DS250_Template.html#questiontask-3",
    "title": "Client Report - [Insert Project Title]",
    "section": "Question|Task 3",
    "text": "Question|Task 3\nCOPY PASTE QUESTION|TASK 3 FROM THE PROJECT HERE\n\nPROVIDE TABLES THAT HELP ADDRESS THE QUESTIONS AND TASKS (IF APPLICABLE).\n\n\n\ntable example\n# Include and execute your code here\nmydat = (df.head(1000)\n    .groupby('manufacturer')\n    .sum()\n    .reset_index()\n    .tail(10)\n    .filter([\"manufacturer\",\"displ\",\"cty\", \"hwy\"])\n)\n\ndisplay(mydat)\n\n\n\n\n\n\ntable example {#cell-Q1-table}\n\n\n\nmanufacturer\ndispl\ncty\nhwy\n\n\n\n\n5\nhyundai\n34.0\n261\n376\n\n\n6\njeep\n36.6\n108\n141\n\n\n7\nland rover\n17.2\n46\n66\n\n\n8\nlincoln\n16.2\n34\n51\n\n\n9\nmercury\n17.6\n53\n72\n\n\n10\nnissan\n42.5\n235\n320\n\n\n11\npontiac\n19.8\n85\n132\n\n\n12\nsubaru\n34.4\n270\n358\n\n\n13\ntoyota\n100.4\n630\n847\n\n\n14\nvolkswagen\n60.9\n565\n789\n\n\n\n\n\n\n\nNote: Non executing Python Snippets include (3) ``` followed by (3) more ```, each on their own line. These are not single quotes, they are the key left of the number 1 key on the keyboard. The top row can include the language of code that is pasted inbetween the ``` marks.\nNote: These also work in Slack and it is expected they are used for any code shared in that app. No screen shots allowed."
  },
  {
    "objectID": "250_projects.html",
    "href": "250_projects.html",
    "title": "DS250 Projects",
    "section": "",
    "text": "Project 0 - Introduction\nProject 1 - What’s in a Name\nProject 2 - Late Flights and Missing Data (JSON)\nProject 3 - Finding Relationships in Baseball\nProject 4 - Can you Predict That?\nProject 5 - The War with StarWars\nProject 6 - Git Your Portfolio Online",
    "crumbs": [
      "DS250 Projects"
    ]
  },
  {
    "objectID": "250_projects.html#repo-for-all-my-projects",
    "href": "250_projects.html#repo-for-all-my-projects",
    "title": "DS250 Projects",
    "section": "",
    "text": "Project 0 - Introduction\nProject 1 - What’s in a Name\nProject 2 - Late Flights and Missing Data (JSON)\nProject 3 - Finding Relationships in Baseball\nProject 4 - Can you Predict That?\nProject 5 - The War with StarWars\nProject 6 - Git Your Portfolio Online",
    "crumbs": [
      "DS250 Projects"
    ]
  },
  {
    "objectID": "250_Projects/project5.html",
    "href": "250_Projects/project5.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 5"
    ]
  },
  {
    "objectID": "250_Projects/project3.html",
    "href": "250_Projects/project3.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 3"
    ]
  },
  {
    "objectID": "250_Projects/project1.html",
    "href": "250_Projects/project1.html",
    "title": "Client Report - Project 1: What’s in a Name?",
    "section": "",
    "text": "Elevator pitch\nImpact of famous characters replacing religious influence: Religious names like Mary, Martha, Peter, and Paul are less popular now. At the same time, names from movies and books, like Arya from Game of Thrones and Elsa from Frozen, are becoming more popular. This shows that characters from movies and books are having more influence. Religious names are used less, and names from movies are used more_\n\n\nRead and format project data\n# Include and execute your code here\nlink = \"https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv\"\nnames_data = pd.read_csv(link)\n\ndf_clean = names_data.dropna()\ndf_clean = df_clean.drop_duplicates()\ndf_clean[\"Total\"] = df_clean[\"Total\"].astype(int)\ndf_clean[\"year\"] = df_clean[\"year\"].astype(int)\ndf_selected = df_clean[[\"name\", \"year\", \"Total\"]]\n\nprint(\"Table filtered by ID, Name, Year, and Total births with that name.Head\")\nprint(\"\")\nprint(df_selected.head())\nprint(\"\")\n\nprint(\"Grouped by name and total births with that name.\")\nprint(\"\")\nname_popular = df_selected.groupby(\"name\")[\"Total\"].sum().reset_index()\nprint(name_popular.head())\nprint(\"\")\n\nprint(\"The most popular names on the list.\")\nprint(\"\")\nname_popular = name_popular.sort_values(by=\"Total\", ascending=False).head(15)\nprint(name_popular)\nprint(\"\")\n\n\nTable filtered by ID, Name, Year, and Total births with that name.Head\n\n    name  year  Total\n0  Aaden  2005      5\n1  Aaden  2007     98\n2  Aaden  2008    939\n3  Aaden  2009   1242\n4  Aaden  2010    414\n\nGrouped by name and total births with that name.\n\n      name  Total\n0    Aaden   3675\n1   Aadhya    691\n2  Aaliyah  74110\n3    Aamir    739\n4    Aanya   1696\n\nThe most popular names on the list.\n\n             name    Total\n3539         John  3269842\n3212        James  3236987\n5930       Robert  3151470\n7139      William  2846759\n5131      Michael  2797282\n1763        David  2663472\n4966         Mary  2616466\n5891      Richard  1978141\n3597       Joseph  1971661\n6767       Thomas  1853250\n1356      Charles  1743788\n1688       Daniel  1534726\n1437  Christopher  1466994\n2217    Elizabeth  1390174\n5609     Patricia  1300072\n\n\n\n\n\nQUESTION|TASK 1\nHow does your name at your birth year compare to its use historically?\nMy name, being of Spanish origin, has increased in recent years because of the immigration of Latinos to the United States.\n\n\nRead and format data\n# Include and execute your code here\n# Include import statements here \n# Include reading data statements here\n\n\n# 1\ndiego_data = df_selected[df_selected[\"name\"]==\"Diego\"]\n\nprint(\"Most popular years and total.\")\nprint(diego_data.sort_values(by=\"Total\", ascending=False).head(15))\nprint(\"\")\n\nbirth = int(1978)\nyear_data = (diego_data[diego_data[\"year\"]==birth])\nprint(\"Year of my birth and the total for that year.\")\nprint(year_data)\n\n#1 Max\nmax_total = int(diego_data[\"Total\"].max())  \nmax_year = diego_data[diego_data[\"Total\"] == max_total]  \nmax_year = int(max_year['year'].values[0])  \n\nprint(\"\")\nprint(\"Info\")\nprint(diego_data.dtypes)\n\n\nMost popular years and total.\n         name  year  Total\n103017  Diego  2006   7017\n103016  Diego  2005   6927\n103018  Diego  2007   6885\n103019  Diego  2008   6561\n103015  Diego  2004   5860\n103020  Diego  2009   5391\n103021  Diego  2010   4697\n103014  Diego  2003   4230\n103013  Diego  2002   3962\n103022  Diego  2011   3808\n103023  Diego  2012   3324\n103026  Diego  2015   3202\n103025  Diego  2014   3148\n103024  Diego  2013   2907\n103012  Diego  2001   2813\n\nYear of my birth and the total for that year.\n         name  year  Total\n102989  Diego  1978    103\n\nInfo\nname     object\nyear      int32\nTotal     int32\ndtype: object\n\n\n\n\nplot example\n# Include and execute your code here\n\nLetsPlot.setup_html()\n\nfig1 = ggplot(diego_data, aes(x='year', y='Total')) + \\\n    geom_line(color='blue') + \\\n    ggtitle(\"Diego\")  \n \nfig1.show()  \n\n\n\n            \n            \n            \nQ1-Chart\n\n\n   \n   \n\n\nIn the 2000s and 2010s, the name Diego was very popular. According to the graph, the use of this name is decreasing.\n\n\ntable example\n# Include and execute your code here\n'''\nmydat = diego_data.head(1000)\\\n    .groupby('year')\\\n    .sum()\\\n    .reset_index()\\\n    .tail(10)\\\n    .filter([\"year\", \"AK\",\"AR\"])\n\ndisplay(mydat)\n'''\n\n\n'\\nmydat = diego_data.head(1000)    .groupby(\\'year\\')    .sum()    .reset_index()    .tail(10)    .filter([\"year\", \"AK\",\"AR\"])\\n\\ndisplay(mydat)\\n'\n\n\n\n\nQUESTION|TASK 2\nIf you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?\nWe will group by decades to determine in which decade this name was used the most.\n\n\nRead and format data\n# Include and execute your code here\n\n# 2\n\nname_2 = \"Brittany\"\n\nn2_decades = df_selected[df_selected[\"name\"] == name_2].copy()\nn2_decades['decade'] = (n2_decades['year'] // 10) * 10\nn2_decades['decade'] = n2_decades['decade'].astype(int)\n\ndecade_totals = n2_decades.groupby('decade')['Total'].sum().reset_index() \nprint(\"\")\nprint(\"info\")\nprint(n2_decades.dtypes)\n\n\n\ninfo\nname      object\nyear       int32\nTotal      int32\ndecade     int32\ndtype: object\n\n\n\n\nplot example\n# Include and execute your code here\n\nfig2 = ggplot(decade_totals, aes(x='decade', y='Total')) + \\\n    geom_bar(stat='identity', fill='red', color='black') + \\\n    ggtitle(\"Popularity per decade\") + \\\n    labs(x=\"Decade\", y=\"Total popularity\")\n\nfig2.show()  \n\n\n   \n   \nQ2-Chart\n\n\nIn 1990 and 1980, those decades were when that name was used the most. By subtracting 2024 - 1980 and 2024 - 1990, we can suggest that it is 34 years old.\n\n\ntable example\n# Include and execute your code here\n'''\nmydat = df.head(1000)\\\n    .groupby('year')\\\n    .sum()\\\n    .reset_index()\\\n    .tail(10)\\\n    .filter([\"year\", \"AK\",\"AR\"])\n\ndisplay(mydat)\n'''\n\n\n'\\nmydat = df.head(1000)    .groupby(\\'year\\')    .sum()    .reset_index()    .tail(10)    .filter([\"year\", \"AK\",\"AR\"])\\n\\ndisplay(mydat)\\n'\n\n\n\n\nQUESTION|TASK 3\nMary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names in a single chart. What trends do you notice?\nNames like Mary, Martha, Peter, and Paul have experienced a decline in popularity in recent decades. However, their Spanish equivalents have not shown the same decline; on the contrary, some have increased in popularity.\n\n\nRead and format data\n# Include and execute your code here\n\nc_names = [\"Mary\", \"Martha\", \"Peter\", \"Paul\"]\ndf_3 = df_selected[df_selected[\"name\"].isin(c_names) &\n                  (df_selected[\"year\"]&gt;1920) &\n                   (df_selected[\"year\"]&lt;2000)]\n\nspa_names = [\"Maria\", \"Marta\", \"Pedro\", \"Pablo\"]\ndf_3spa = df_selected[df_selected[\"name\"].isin(spa_names) &\n                  (df_selected[\"year\"]&gt;1920) &\n                   (df_selected[\"year\"]&lt;2000)]\n\n\n\n\nplot example\n# Include and execute your code here\n\nfig3 = ggplot(df_3, aes(x='year', y='Total', color='name')) + \\\n    geom_line(size=1.5) + \\\n    ggtitle(\"Christian names Over Time (english)\")  \nfig3.show()  \n\nfig3spa = ggplot(df_3spa, aes(x='year', y='Total', color='name')) + \\\n    geom_line(size=1.5) + \\\n    ggtitle(\"Christian names Over Time (spanish)\")  \n\nfig3spa.show()  \n\n\n   \n   \nQ3 chart\n\n\n   \n   \n\n\nMaria has always been very popular, although its use has decreased.\n\n\ntable example\n# Include and execute your code here\n'''\nmydat = df.head(1000)\\\n    .groupby('year')\\\n    .sum()\\\n    .reset_index()\\\n    .tail(10)\\\n    .filter([\"year\", \"AK\",\"AR\"])\n\ndisplay(mydat)\n'''\n\n\n'\\nmydat = df.head(1000)    .groupby(\\'year\\')    .sum()    .reset_index()    .tail(10)    .filter([\"year\", \"AK\",\"AR\"])\\n\\ndisplay(mydat)\\n'\n\n\n\n\nQUESTION|TASK 4\nAnalysis of the Name “Isabella” in Relation to the Movie “Twilight” (2008)\nThe name of an actor, actress, or main character from a bestselling book can help parents decide the name of a newborn, and the answer is yes. For example, Isabella from the ‘Twilight’ series.\n\n\nRead and format data\n# Include and execute your code here\n# Include import statements here \n# Include reading data statements here\n\nname_4 = \"Isabella\"\ndf_name_4 = df_selected[df_selected[\"name\"]== name_4]\n\n\n\n\nplot example\n# Include and execute your code here\n\nfig4 = ggplot(df_name_4, aes(x='year', y='Total')) + \\\n    geom_line(color='orange') + \\\n    ggtitle(f\"Popularity {name_4} Over Time \")  \n\n\nfig4.show()\n\n\n   \n   \nQ4 Chart\n\n\nIn 2008, the movie was released, and we can see the new growth of its use.\n\n\ntable example\n# Include and execute your code here\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "250_Projects/project2.html",
    "href": "250_Projects/project2.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "250_Projects/project4.html",
    "href": "250_Projects/project4.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 4"
    ]
  },
  {
    "objectID": "250_Projects/project6.html",
    "href": "250_Projects/project6.html",
    "title": "Client Report - [Insert Project Title]",
    "section": "",
    "text": "Paste in a template\n\n\n\n\n Back to top",
    "crumbs": [
      "DS250 Projects",
      "Project 6"
    ]
  },
  {
    "objectID": "resume.html",
    "href": "resume.html",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "Physicist, Mathematician, Cambridge professor.\n\nisaac@applesdofall.org | My wikipedia page\n\n\n\nStanding on the shoulders of giants\n\n\nLaws of motion, gravitation, minting coins, disliking Robert Hooke\n\n\n\nCooling, power series, optics, alchemy, planetary motions, apples.\n\n\n\n\n1654-1660 The King’s School, Grantham.\nJune 1661 - now Trinity College, Cambridge\n\nSizar\n\n1667 - death Trinity College, Cambridge\n\nFellow\n\n\n\n\n2012 President, Royal Society, London, UK\nAssociate, French Academy of Science, Paris, France\n\n\n\n\n\n\n1669 Newton Sir I, De analysi per æquationes numero terminorum infinitas.\n1669 Lectiones opticæ.\netc. etc. etc.\n\n\n\n2012 Infinitesimal calculus for solutions to physics problems, SMBC patent 001\n\n\n\n\n1600 Royal Mint, London\n\nWarden\nMinted coins\n\n1600 Lucasian professor of Mathematics, Cambridge University"
  },
  {
    "objectID": "resume.html#currently",
    "href": "resume.html#currently",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "Standing on the shoulders of giants\n\n\nLaws of motion, gravitation, minting coins, disliking Robert Hooke\n\n\n\nCooling, power series, optics, alchemy, planetary motions, apples."
  },
  {
    "objectID": "resume.html#education",
    "href": "resume.html#education",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1654-1660 The King’s School, Grantham.\nJune 1661 - now Trinity College, Cambridge\n\nSizar\n\n1667 - death Trinity College, Cambridge\n\nFellow"
  },
  {
    "objectID": "resume.html#awards",
    "href": "resume.html#awards",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "2012 President, Royal Society, London, UK\nAssociate, French Academy of Science, Paris, France"
  },
  {
    "objectID": "resume.html#publications",
    "href": "resume.html#publications",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1669 Newton Sir I, De analysi per æquationes numero terminorum infinitas.\n1669 Lectiones opticæ.\netc. etc. etc.\n\n\n\n2012 Infinitesimal calculus for solutions to physics problems, SMBC patent 001"
  },
  {
    "objectID": "resume.html#occupation",
    "href": "resume.html#occupation",
    "title": "Isaac Newtons’s CV",
    "section": "",
    "text": "1600 Royal Mint, London\n\nWarden\nMinted coins\n\n1600 Lucasian professor of Mathematics, Cambridge University"
  }
]